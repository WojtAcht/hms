load_all()
library(devtools)
load_all()
result <- hms(fitness=fitness, lower=-5, upper=5)
result <- hms(fitness=function(x){x}, lower=-5, upper=5)
result
plot(result)
f <- function(x, y){print(match.call())}
f(1,2)
f <- function(x, y){match.call()}
f()
f(1,2)
f(1,2)[x]
f(1,2)['x']
f(1,2)['x']
f(1,2)['x'][1]
f(1,2)['y']
f <- function(x, y){as.list(match.call())}
f(1,2)
f(1,2)$z
f(1,2)$x
f(1,2)$y
f <- function(x, y){print(match.call());as.list(match.call())}
f(1,2)
f <- function(x, y){print(match.call());as.list(match.call())}
f(1)
missing(list('x'=5), 'y')
missing(list('x'=5)$)
missing(list('x'=5)$y)
missing()
missing(x)
load_all()
test()
load_all()
test()
is.null(list('x'=1)$y)
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
matrix(1:10, nrow=10)
matrix(1:10, nrow=10)
matrix(1:10, nrow=10)
matrix(list(c(1,2), c(2,3)), nrow=2)
default_create_population(c(0,0), c(-5,-5), c(5,5), 10, 1)
default_create_population(c(0,0))
default_create_population(c(0,0))(c(0,0), c(-5,-5), c(5,5), 10, 1)
rbind(c(1,2,3), c(4,5,6))
rbind(rbind(c(1,2,3), c(4,5,6)), c(7,8,9))
matrix(rep(c(10,9,8),5))
matrix(rep(c(10,9,8),5), ncol=3)
matrix(rep(c(10,9,8),5), nrow=3)
matrix(rep(c(10,9,8),5), nrow=3)
matrix(rep(c(10,9,8),5), nrow=3).T
t(matrix(rep(c(10,9,8),5), nrow=3))
create_population <- function(mean, lower, upper, population_size, tree_level){
dimmensions <- length(lower)
t(matrix(rep(lower, population_size), nrow=dimensions))
}
deme <- create_deme(-5, 5, NULL, 5, create_population)
create_population <- function(mean, lower, upper, population_size, tree_level){
dimensions <- length(lower)
t(matrix(rep(lower, population_size), nrow=dimensions))
}
deme <- create_deme(-5, 5, NULL, 5, create_population)
deme
create_population <- function(mean, lower, upper, population_size, tree_level){
dimensions <- length(lower)
t(matrix(rep(lower, population_size), nrow=dimensions))
}
deme <- create_deme(c(-5, -5), c(5,5), NULL, 5, create_population)
deme
deme@population
nrow(deme@population)
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
create_population <- function(mean, lower, upper, population_size, tree_level){
dimensions <- length(lower)
t(matrix(rep(lower, population_size), nrow=dimensions))
}
deme <- create_deme(c(-5, -5), c(5,5), NULL, 5, create_population)
dim(1
)
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
result <- hms(fitness=fitness, lower=-5, upper=5)
result <- hms(fitness=function(x){x}, lower=-5, upper=5)
plot(result)
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
load_all()
test()
create_population <- function(mean, lower, upper, population_size, tree_level){
dimensions <- length(lower)
t(matrix(rep(lower, population_size), nrow=dimensions))
}
deme <- create_deme(c(-5, -5), c(5,5), NULL, 5, create_population)
load_all()
test()
load_all()
test()
load_all()
load_all()
load_all()
test()
typeof("a")
load_all()
test()
load_all()
test()
load_all()
test()
load_all()
test()
sigma <- list(1)
hms(fitness=function(x){x}, lower=-5, upper=5, sigma = sigma)
expect_error(hms(fitness=function(x){x}, lower=-5, upper=5, sigma = sigma), "The list of standard deviations (sigma) must have tree_height elements.")
load_all()
test()
load_all()
load_all()
load_all()
load_all()
load_all()
load_all()
test()
load_all()
load_all()
test()
check()
load_all()
check()
